{
	"info": {
		"_postman_id": "2cd5ac00-6d6b-4342-be89-d1524f602ec2",
		"name": "Math Function API Test Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39853023"
	},
	"item": [
		{
			"name": "Authentication Tests",
			"item": [
				{
					"name": "Sign Up - Valid User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Successful Sign Up', function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.have.property('token');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser1\",\n    \"password\": \"StrongPass123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/sign-up",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"sign-up"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign In - Valid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Successful Sign In', function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.have.property('token');",
									"    pm.environment.set('jwt_token', pm.response.json().token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"newuser1\",\n    \"password\": \"StrongPass123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/sign-in",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"sign-in"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign Up - Invalid User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Invalid Sign Up Validation', function() {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"a\",\n    \"password\": \"short\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/sign-up",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"sign-up"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Point API Tests",
			"item": [
				{
					"name": "Create Point - Valid Input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create Point Successfully', function() {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json()).to.have.property('id');",
									"    pm.environment.set('point_id', pm.response.json().id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/points?x=1.0&y=2.0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points"
							],
							"query": [
								{
									"key": "x",
									"value": "1.0"
								},
								{
									"key": "y",
									"value": "2.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Point 1 - Valid Input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create Point Successfully', function() {\r",
									"pm.environment.set('point_id1', pm.response.json().id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/points?x=0.0&y=0.0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points"
							],
							"query": [
								{
									"key": "x",
									"value": "0.0"
								},
								{
									"key": "y",
									"value": "0.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create point 2 - Valid Input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create Point Successfully', function() {\r",
									"pm.environment.set('point_id2', pm.response.json().id)});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/points?x=1.0&y=1.0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points"
							],
							"query": [
								{
									"key": "x",
									"value": "1.0"
								},
								{
									"key": "y",
									"value": "1.0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Point - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Retrieve Point Successfully', function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.have.property('id', parseInt(pm.environment.get('point_id')));",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/points/{{point_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points",
								"{{point_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Point - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Non-Existent Point Handling', function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/points/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Point - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Delete Point Successfully', function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/points/{{point_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"points",
								"{{point_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Math Function API Tests",
			"item": [
				{
					"name": "Create Math Function - Valid Input",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Create Math Function Successfully', function() {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json()).to.have.property('hash_function');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Linear Function\",\n    \"points\": [\n        {\n            \"id\": {{point_id1}}\n        },\n        {\n            \"id\": {{point_id2}}\n        }\n    ],\n    \"hash_function\": {{function_hash}},\n    \"count_point\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/functions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"functions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Math Function - Duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Duplicate Function Handling', function() {",
									"    pm.response.to.have.status(201);",
									"    pm.expect(pm.response.json()).to.have.property('update_at');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Linear Function\",\n    \"points\": [\n        {\n            \"id\":{{point_id1}}\n        },\n        {\n            \"id\":{{point_id2}}\n        }\n    ],\n    \"hash_function\": {{function_hash}},\n    \"count_point\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/functions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"functions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Math Function - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Retrieve Math Function Successfully', function() {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json()).to.have.property('hash_function');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/functions/{{function_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"functions",
								"{{function_hash}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Math Function - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Non-Existent Function Handling', function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/functions/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"functions",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Math Function - Existing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Delete Math Function Successfully', function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/functions/{{function_hash}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"functions",
								"{{function_hash}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}